{
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Aggregate1').item.json.data }}",
        "messages": {
          "messageValues": [
            {
              "message": "=You are an expert social media analyst specializing in extracting hidden insights from professional posts.\n\n## YOUR TASK\nAnalyze the lead's most recent LinkedIn activity (within the last 6 months) to identify patterns, priorities, and unspoken needs.\n\nif no  information found from previous step return no post or no information found\n\nthe lead information is \nFull Name - {{ $('Aggregate7').item.json.data[0]['First Name'] }} {{ $('Aggregate7').item.json.data[0]['Last Name'] }}\nCompany - {{ $('Aggregate7').item.json.data[0]['Company name'] }}\nLead linkedin profile url - {{ $('Aggregate7').item.json.data[0].linkedin_url }}\n\ntodays date - {{ $now }}\n## ANALYSIS FOCUS\n1. Identify the lead's most recent posts (last 6 months only)\n2. Extract key themes, hashtags, and engagement patterns\n3. Uncover IMPLIED priorities that aren't explicitly stated\n4. Find conversation starters based on their professional interests\n5. Detect sentiment and tone that reveals their communication style\n\n## OUTPUT FORMAT\nCreate a strategic report with these sections:\n\n1. **Key Insights from Recent Activity (Last 6 Months)**\n   - Date and topic of most significant post\n   - Brief description of content\n   - Engagement metrics (if available)\n   - Hidden intent or subtext in their messaging\n\n2. **Patterns & Strategic Focus Areas**\n   - Recurring professional themes\n   - Technologies or methodologies mentioned\n   - Changes in posting frequency or content\n\n3. **Pain Points (Implied)**\n   - Challenges hinted at but not directly stated\n   - Areas where they seek solutions or improvements\n\n4. **Sales Opportunities**\n   - Specific angles aligned with their content\n   - Suggested conversation starters or questions\n   - Example pitch language that ties to their content\n\nPrioritize depth over breadth.\n\nIMPORTANT RULES:\n- Only analyze posts from the last 6 months - if the post is older than 6 month DO NOT ANALYZE IT!\n- Do not make up information or posts\n- If no recent posts exist, clearly state this rather than analyzing older content\n- Focus on professional content only, ignore personal posts\n- Include exact dates for any posts referenced\n- Note when you're making inferences versus reporting facts\n"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        -5500,
        6400
      ],
      "id": "a44dcb76-3bb3-4eae-86e6-337f39ed7789",
      "name": "Basic LLM Chain1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "cd88f23b-cba8-4602-b711-22353559a80b",
              "name": "text",
              "value": "={{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5180,
        6400
      ],
      "id": "3cb738f0-9013-46db-988d-1230e63847f5",
      "name": "Edit Fields4"
    },
    {
      "parameters": {
        "amount": 25
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -6420,
        6280
      ],
      "id": "3dda11ea-00ab-44c6-bf76-a83cd935802d",
      "name": "Wait4",
      "webhookId": "d406173f-1316-4bbe-9d9f-af4672deb2e5"
    },
    {
      "parameters": {
        "options": {
          "reset": false
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -7420,
        6280
      ],
      "id": "98e8fe68-9281-47e8-9453-47d25d75e15f",
      "name": "Loop Over Items3"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "name": "Replace Me3",
      "typeVersion": 1,
      "position": [
        -6880,
        6280
      ],
      "id": "2ed5f466-4aa1-4118-bede-1b7ede50f254"
    },
    {
      "parameters": {
        "content": "# Lead Linkedin post scraper, cost:  For 100 leads: $2.50 | For 300 leads: $7.50 | For 1000 leads: $25.00 \n\n\n",
        "height": 540,
        "width": 3560,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -8180,
        6100
      ],
      "id": "f04b1c05-5731-44c3-b346-a5fcecd3c4ba",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "# Task #1:  Retrieving list of people from LinkedIn using the generated URL, adding all unique emails to the database and verifying their email ",
        "height": 780,
        "width": 4460
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -8180,
        5220
      ],
      "id": "9c2aaa5b-d64a-443e-837d-dda4888b9c49",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.apify.com/v2/acts/jljBwyyQakqrL1wae/runs",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "token",
              "value": "your api key"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"url\": \"{{ $json.URL }}\",\n  \"totalRecords\": 1500,\n  \"getWorkEmails\": true,\n  \"getPersonalEmails\": true\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -7660,
        5320
      ],
      "id": "94609c63-128f-4a9e-afbc-970931bf014e",
      "name": "Apify-Apollo-Scraper"
    },
    {
      "parameters": {
        "url": "=https://api.apify.com/v2/datasets/{{ $json.data[0].DefaultDataSetId }}/items",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "token",
              "value": "your api key"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -6940,
        5660
      ],
      "id": "caceac95-2dc6-4110-8c88-a85b7059de85",
      "name": "get-apify-actor-output (apollo scraper)"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.apify.com/v2/acts/LQQIXN9Othf8f7R5n/runs",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "token",
              "value": "your api key"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"limit\": 5,\n    \"username\": \"{{ $json.linkedin_url }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -6720,
        6280
      ],
      "id": "59d02dbd-cee5-49bd-9064-ef242b63d223",
      "name": "Apify-linkedin-post-scraper"
    },
    {
      "parameters": {
        "url": "=https://api.apify.com/v2/datasets/{{ $json.data[0][\"Lead-LinkedIn-PostData-DataSetId\"] }}/items",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "token",
              "value": "your api key"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -6120,
        6420
      ],
      "id": "490166bf-708e-4b9e-ac0b-35944b140289",
      "name": "get-apify-linkedin-post-scraper-data",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=# Lead Qualification Engine for Automynic Lead Generation\n\n## SYSTEM CONTEXT\nYou are the Lead Qualification Engine for Automynic, an AI agency specializing in AI automation and custom-based solutions - specifically lead generation. Your purpose is to analyze the detective report and lead enrichment data to identify and prioritize high-value prospects for AI Automation technology.\n\n## YOUR DATA SOURCES\nYou will analyze data from:\n1. **Detective Report**:\n2. **Lead Data**:\n   - `E-mail`: {{ $('Aggregate6').item.json.data[0]['E-mail'] }}\n   - `First Name` & `Last Name`: {{ $('Aggregate6').item.json.data[0]['First Name'] }} {{ $('Aggregate6').item.json.data[0]['Last Name'] }}\n   - `title`: {{ $('Aggregate6').item.json.data[0].title }}\n   - `Company name`: {{ $('Aggregate6').item.json.data[0]['Company name'] }}\n   - `state`, `city`, `country`: {{ $('Aggregate6').item.json.data[0].state }} {{ $('Aggregate6').item.json.data[0].city }} {{ $('Aggregate6').item.json.data[0].country }}\n   - `lead_linkedin_post_data`: {{ $('Aggregate6').item.json.data[0].lead_linkedin_post_data }}\n\n## YOUR PRIMARY OBJECTIVES\n1. **Determine Prospect Fit**: Assess if the individual is the right decision-maker or influencer to contact regarding AI Automation solutions.\n2. **Evaluate Business Need**: Identify signals indicating the company could benefit from Automynic services.\n3. **Score Lead Quality**: Assign a numerical score (1-100) with detailed reasoning.\n4. **Provide Outreach Guidance**: Suggest personalized talking points based on the prospect's interests, challenges, and company context.\n\n## LEAD SCORING CRITERIA (0-100 SCALE)\n\n### Decision-Maker Assessment (30 points)\n- Position relevance (0-15): C-suite, Director, VP, or Manager in Technology, Operations, Digital Transformation, Innovation, or Customer Experience\n- Authority signals (0-10): Evidence of decision-making capacity in posts, profiles, or company information\n- Tenure and experience (0-5): Established at company or in role long enough to have influence\n\n### Company Need Indicators (40 points)\n- Automation potential (0-10): Evidence of manual processes or inefficiencies mentioned\n- Customer service focus (0-10): High volume of customer interactions where voice agents could help\n- Digital transformation signals (0-10): Recent or ongoing technology upgrades or initiatives\n- Scaling challenges (0-10): Growth indicators suggesting need for increased operational efficiency\n\n### Engagement Potential (20 points)\n- AI/Automation interest (0-10): Content engagement or posting about relevant technologies\n- Problem awareness (0-10): Discussions of challenges that AI automation or voice agents could solve\n\n### Opportunity Timing (10 points)\n- Recent trigger events (0-5): New role, company pivot, funding, expansion, or expressed challenges\n- Market conditions (0-5): Industry trends suggesting heightened need for AI solutions\n\n5. **Automynic AI Context:**\n- You provide AI automation solutions for lead generation, demo booking, and support tickets\n- Your systems work 24/7 without human intervention using n8n and Apify integrations\n- Your main product is automated lead generation and outreach - offer this solution by default.\n- Your solutions integrate with existing business tools and CRM systems\n- Your automations help SaaS companies scale operations without increasing headcount\n- You offer custom automation solutions with high ROI potential for unique business challenges\n\nHigh-value prospects typically have:\n- Not Enough Clients\n- High volume of leads requiring follow-up\n- Customer service challenges\n- Growth or scaling initiatives\n- Limited staff for 24/7 coverage\n- Interest in operational efficiency\n- Ineffcient Manual Work\n- Digital transformation initiatives\n\n## DISQUALIFICATION FACTORS\nFlag any of these immediate disqualifiers:\n- Lead role has no connection to sales, marketing, operations, or customer service\n- Evidence of existing sophisticated AI voice system implementation\n- Expressed negative views toward AI automation\n\n## RESPONSE FORMAT\n\n### 1. Lead Qualification Summary\n- Name, Position, Company\n- Overall Score (1-100)\n- VERDICT: HOT LEAD / WARM LEAD / NOT QUALIFIED\n\n### 2. Quick Stats\n- Decision-Maker Score (0-30)\n- Business Need Score (0-40)\n- Engagement Potential (0-20)\n- Timing Score (0-10)\n\n### 3. Detailed Scoring Breakdown\nProvide point allocations for each criterion with brief justification:\n```\nDECISION-MAKER ASSESSMENT: X/30\n- Position relevance: X/15 - [Justification]\n- Authority signals: X/10 - [Justification]\n- Tenure and experience: X/5 - [Justification]\n\nCOMPANY NEED INDICATORS: X/40\n- Automation potential: X/10 - [Justification]\n- Customer service focus: X/10 - [Justification]\n- Digital transformation signals: X/10 - [Justification]\n- Scaling challenges: X/10 - [Justification]\n\nENGAGEMENT POTENTIAL: X/20\n- AI/Automation interest: X/10 - [Justification]\n- Problem awareness: X/10 - [Justification]\n\nOPPORTUNITY TIMING: X/10\n- Recent trigger events: X/5 - [Justification]\n- Market conditions: X/5 - [Justification]\n```\n\n## SPECIAL INSTRUCTIONS\n\n1. **Pattern Recognition**: Identify recurring themes in the prospect's professional content that indicate interest in efficiency, technology, or customer experience.\n\n2. **Industry Context**: Adjust scoring based on industry-specific AI adoption patterns and challenges.\n\n3. **Ethical Considerations**: \n   - Only use publicly available information in your analysis\n   - Avoid making assumptions about personal characteristics\n   - Focus on professional signals of interest and need\n\n4. **Signal Weighting**: Prioritize recent activities (within 3 months) over older information.\n\n5. **False Positive Prevention**: Flag when there is insufficient data to make a confident assessment.\n\n6. **Competitive Awareness**: Note if the prospect already uses competing AI automation or voice agent solutions.\n\n7. **ADHD-Friendly Output**: Structure all information with clear headings, bullet points, and visual separation to enhance readability and focus.\n\nRemember: Your goal is to save Automynic time and resources by identifying the most promising prospects while providing actionable intelligence for successful outreach."
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        -6120,
        6840
      ],
      "id": "0d2cab63-174f-4580-bdc1-d700d5d9d830",
      "name": "Basic LLM Chain5"
    },
    {
      "parameters": {
        "text": "={{ $json.output }}",
        "attributes": {
          "attributes": [
            {
              "name": "overall score",
              "description": "score of the lead from the previous ai response",
              "required": true
            },
            {
              "name": "verdict",
              "description": "verdict of the lead from the previous ai response",
              "required": true
            },
            {
              "name": "Decision-Maker Score",
              "description": "decision maker score of the lead from the previous ai response",
              "required": true
            },
            {
              "name": "Business Need Score",
              "description": "Business Need Score score of the lead from the previous ai response",
              "required": true
            },
            {
              "name": "Engagement Potential",
              "description": "Engagement Potential  score of the lead from the previous ai response",
              "required": true
            },
            {
              "name": "Timing Score",
              "description": "Timing Score  score of the lead from the previous ai response",
              "required": true
            },
            {
              "name": "Detailed Scoring Breakdown",
              "description": "Detailed Scoring Breakdown from the previous ai response",
              "required": true
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1,
      "position": [
        -5680,
        6840
      ],
      "id": "3f23aaf5-c1f7-4aca-854b-2d1b775342a2",
      "name": "Information Extractor2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -7740,
        6780
      ],
      "id": "9bda0d0c-e20e-413d-aae8-8c9b7034cda8",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "name": "Replace Me7",
      "typeVersion": 1,
      "position": [
        -7480,
        7020
      ],
      "id": "bbbfae7b-81ff-49c3-81b7-d05dfee72ee7"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -6480,
        7040
      ],
      "id": "eff30d26-29b5-4917-b3d5-46125e523ddc",
      "name": "Aggregate6"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=# DIGITAL DETECTIVE: LEAD PROFILING SYSTEM\n\n## SYSTEM CONTEXT\nYou are a digital detective analyzing lead data to create a psychological profile that will inform personalized cold outreach. Your analysis must be evidence-based, drawing on the specific data fields provided for each lead. Your report will be used by an email-writing AI to craft personalized messages.\n\n## DATA SOURCES YOU WILL ANALYZE\nYou will receive a JSON object with the following key data fields:\n\n1. **Basic Lead Information:**\n   - `E-mail`: {{ $('Supabase5').item.json['First Name'] }}\n   - `First Name` & `Last Name`: {{ $('Supabase5').item.json['First Name'] }} {{ $('Supabase5').item.json['Last Name'] }}\n   - `title`: {{ $('Supabase5').item.json.title }}\n   - `Company name`: {{ $('Supabase5').item.json['Company name'] }}\n   - `state`, `city`, `country`: {{ $('Supabase5').item.json.state }} {{ $('Supabase5').item.json.city }} {{ $('Supabase5').item.json.country }}\n\n2. **Digital Footprint:**\n   - `linkedin_url`: {{ $('Supabase5').item.json.linkedin_url }}\n   - `Company website_url`: {{ $('Supabase5').item.json['Company website_url'] }}\n   - `Company linkedin_url`: {{ $('Supabase5').item.json['Company linkedin_url'] }}\n   - `Company facebook_url`: {{ $('Supabase5').item.json['Company facebook_url'] }}\n\n3. **AI-Generated Analysis Reports:**\n   - `lead_linkedin_post_data`: {{ $('Supabase5').item.json.lead_linkedin_post_data }}\n   \n## INVESTIGATION FRAMEWORK\n\n### SECTION 1: IDENTITY ASSESSMENT\nAnalyze the following about the lead:\n- Professional self-presentation (formal/informal, technical/accessible)\n- Career trajectory patterns\n- Areas of expertise and professional strengths\n- Professional network characteristics\n- Professional accomplishment patterns\n\nUse these fields to inform your analysis:\n- `title` (job title)\n- `lead_linkedin_data` (profile analysis)\n- `lead_linkedin_post_data` (posting activity)\n\n### SECTION 2: LINGUISTIC ANALYSIS\nAnalyze the lead's communication patterns:\n- Vocabulary level and specialized jargon usage\n- Communication directness vs. diplomacy\n- Data-driven vs. narrative communication preference\n- Abstract vs. concrete language preferences\n- Emotional tone markers in professional communication\n\nUse these fields to inform your analysis:\n- `lead_linkedin_post_data` (their own writing)\n- `lead_linkedin_data` (profile language)\n\nIf direct communication samples are limited or unavailable, clearly indicate this as an evidence limitation and make inferences based on:\n- Professional role communication norms\n- Company communication style\n- Industry standards\n\n### SECTION 3: PROFESSIONAL MOTIVATION PROFILE\nIdentify core professional drivers:\n- Primary career advancement strategies\n- Professional challenges mentioned\n- Organizational pain points\n- Achievement recognition patterns\n- Innovation vs. stability orientation\n\nUse these fields to inform your analysis:\n- `lead_linkedin_data`\n- `lead_linkedin_post_data`\n- `company_search_result` (for industry context)\n- `scraped_company_data` (for company challenges)\n\n### SECTION 4: ENGAGEMENT TRIGGER CATALOG\nDocument specific evidence of what prompts the lead to engage:\n- Content topics that generate consistent response\n- Professional challenges that spark their interest\n- Value propositions they respond positively to\n- Timing patterns of engagement\n- Emotional hooks that generate visible response\n\nUse these fields to inform your analysis:\n- `lead_linkedin_post_data` (what they engage with)\n- `lead_linkedin_company_post_data` (company engagement patterns)\n\n### SECTION 5: DECISION-MAKING FRAMEWORK\nMap the lead's approach to professional decisions:\n- Information processing style (comprehensive vs. summary)\n- Evidence requirements before action\n- Consultation patterns (individual decider vs. consensus seeker)\n- Risk assessment approach\n- Innovation adoption patterns\n\nUse these fields to inform your analysis:\n- Job title (for typical decision authority)\n- `lead_linkedin_data` (for seniority assessment)\n- `scraped_company_data` (for company culture insights)\n\n### SECTION 6: TRUST ESTABLISHMENT PARAMETERS\nIdentify key elements required to establish credibility:\n- Professional credentials they respond to\n- Industry knowledge depth requirements\n- Problem framing approaches that resonate\n- Relationship building prerequisites\n- Transparency expectations\n\nUse these fields to inform your analysis:\n- `lead_linkedin_data`\n- `lead_linkedin_post_data`\n- `scraped_company_data` (company values)\n- `lead_linkedin_company_data` (company positioning)\n\n## INTELLIGENCE REPORT DELIVERABLES\n\n### 1. PSYCHOLOGICAL PROFILE SUMMARY\nCreate a comprehensive 2-3 paragraph profile summarizing the lead's professional persona, communication style, motivational drivers, and decision-making patterns.\n\n### 2. RESPONSE TRIGGER ANALYSIS\nProvide detailed intelligence on:\n- Primary professional pain points (ranked by evidence strength)\n- Value propositions likely to resonate (with supporting evidence)\n- Trust-building prerequisites for effective communication\n- Engagement hooks with highest response probability\n\n### 3. COMMUNICATION STRATEGY INTELLIGENCE\nOutline key intelligence for effective communication:\n- Optimal communication style (formal/informal, direct/nuanced)\n- Language patterns to mirror (with specific examples when available)\n- Professional vocabulary to incorporate\n- Content structure preferences\n- Evidence types required for credibility\n- Objection patterns to anticipate\n\n### 4. TACTICAL APPROACH GUIDANCE\nProvide specific intelligence for the email-creation AI:\n- 5 specific topics to avoid (with evidence of negative reception)\n- 5 specific topics to include (with evidence of positive engagement)\n- 3 value framing approaches aligned to psychological profile\n- 3 professional challenges to reference (with evidence of relevance)\n- 2 credibility-establishing elements critical for this lead\n\n## EVIDENCE EVALUATION PROTOCOLS\n\n### Evidence Strength Classification\nFor each insight you provide, indicate one of the following confidence levels:\n- **CONFIRMED**: Directly stated in the data with high confidence\n- **STRONGLY SUSPECTED**: Multiple data points strongly suggest this conclusion\n- **PROBABLE**: Reasonable inference based on available data\n- **SPECULATIVE**: Possible but limited supporting evidence\n\n### Missing Data Protocol\nWhen specific data points are missing or limited:\n1. Clearly indicate the evidence limitation at the beginning of the relevant section\n2. Make reasonable inferences based on job title, industry norms, and available company data\n3. Label these inferences as SPECULATIVE or PROBABLE based on supporting contextual evidence\n4. Offer alternative possibilities when the evidence supports multiple interpretations\n\n## QUALITY ASSURANCE REQUIREMENTS\n1. **Evidence Citation**: Link each major insight to specific evidence from the data\n2. **Confidence Labeling**: Clearly mark the confidence level for key insights\n3. **Assumption Transparency**: Explicitly state when making inferences beyond direct evidence\n4. **Contradiction Handling**: Note any contradictory evidence and explain your interpretation\n5. **Data Gaps**: Acknowledge when certain profile elements cannot be reliably determined\n\n## CRITICAL SUCCESS FACTORS\n1. Focus on actionable insights for email personalization\n2. Prioritize evidence-based conclusions over general marketing advice\n3. Maintain detective mindset: observe patterns, make connections, form evidence-based theories\n4. Provide specific, concrete recommendations rather than vague generalizations\n5. Analyze the unique individual, not just their industry or role\n\n\nOutput only the analysis, nothing more\nRemember: Your intelligence will directly inform the personalization strategy for cold outreach. Be thorough, specific, and evidence-based in your analysis.\n"
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        -7080,
        6860
      ],
      "id": "ce239e16-44e9-4171-be79-1307cd9c18e3",
      "name": "Basic LLM Chain7",
      "retryOnFail": true
    },
    {
      "parameters": {
        "content": "# Generating verdict and psychological profiles ",
        "height": 580,
        "width": 3220,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -8180,
        6700
      ],
      "id": "f4c6da3a-4a79-4ac9-a323-b85b2c7a7774",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "jsCode": "// Get the AI response output\nconst aiOutput = $('Basic LLM Chain1').first().json.text;\n\n// Remove *, $, and # symbols from the output\nconst filteredOutput = aiOutput.replace(/[\\*\\$#]/g, '');\n\n// Return the cleaned output\nreturn {\n  json: {\n    output: filteredOutput\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5020,
        6400
      ],
      "id": "e28fd73b-af77-49b7-90dc-8b65a02d6762",
      "name": "Removing unnecessary symbols from response1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatDeepSeek",
      "typeVersion": 1,
      "position": [
        -6740,
        7360
      ],
      "id": "4c87c268-cc8a-444d-90e7-9bfca991f515",
      "name": "DeepSeek Chat Model9",
      "credentials": {
        "deepSeekApi": {
          "id": "n6N1ydG9asjEHVWX",
          "name": "DeepSeek account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "temperature": 0.7
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatDeepSeek",
      "typeVersion": 1,
      "position": [
        -6980,
        7360
      ],
      "id": "f8f78a55-cfe7-44b7-b319-62a3e2251557",
      "name": "DeepSeek Chat Model8",
      "credentials": {
        "deepSeekApi": {
          "id": "n6N1ydG9asjEHVWX",
          "name": "DeepSeek account"
        }
      }
    },
    {
      "parameters": {
        "text": "={{ $json.text }}",
        "attributes": {
          "attributes": [
            {
              "name": "Subject-Line",
              "description": "email subject line",
              "required": true
            },
            {
              "name": "Icebreaker",
              "description": "Icebreaker, always start with Hi/Hey name, make sure to extract full object until it ends with }",
              "required": true
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1,
      "position": [
        -6700,
        7500
      ],
      "id": "18dd0a79-15d7-4ccb-89a0-9aeb02f52740",
      "name": "Information Extractor3",
      "retryOnFail": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Your task is to take the information and analysis I gave you to turn into catchy, personalized openers for a cold email campaign to imply that the rest of the campaign is personalized\n\n## DELIVERABILITY MASTERY\n\nYou've now discovered critical deliverability factors:\n\n- Subject lines must be ultra-conversational (4-7 words maximum) and resemble what a friend would send\n- Examples that dont work: \"quick one\", \"saw this and thought of you\", \"question about [company]\"\n- No fake personalization - deep, specific research insights only\n- Perfect icebreakers never seen are worthless - design for deliverability first\n\n\n## SUBJECT LINE MASTERY\n\nCritical subject line requirements for maximum deliverability and open rates:\n\n### Length & Syntax Rules:\n\n- **Ideal range**: 4-7 words, 28-42 characters maximum\n- **Top performers**: \"Custom Reference + Value Hook\" pattern (e.g., \"AI-driven lead gen for {Company}\")\n- **Character limit**: Never exceed 42 characters or you trigger spam filters\n- **Word economy**: Every word must earn its place\n- Must be correct to real word news and date (for example dont create a christmas related icebreaker if its summer, or etc.)\n\n\n### What to AVOID (Instant Spam Triggers):\n\n- **Question marks**: Reduces opens by 12% - NEVER use them\n- **Emojis**: Increases spam risk by 3x - FORBIDDEN\n- **ALL CAPS**: Instant spam folder\n- **Multiple exclamation points**: Screams desperation\n- **Spam words**: \"Free\", \"Urgent\", \"Limited time\", \"Act now\"\n- **Generic phrases**: \"Quick question\", \"Following up\", \"Checking in\"\n\n\n### Personalization Triggers That Work:\n\n- **Contextual anchors**: Reference recent funding rounds, product launches, or leadership changes\n- **Winning pattern**: Specific observation → Transition to value proposition\n- **Examples**:\n    - \"Congrats on Series B funding\"\n    - \"{Company} AI automation win\"\n    - \"Your LinkedIn post resonated\"\n    - \"{Industry} trends discussion\"\n\n\n### Subject Line Formula:\n\n**{Specific Reference} + {Implied Value}** = Opens that convert\n\n## YOUR MISSION\n\nYour mission is to use a bunch of personal information about a prospect, and then design a customized, one-line icebreaker that opens conversation through pure statements. Create a very well researched  icebreaker that will be used in email and will generate a response. It must:\n\n1. Be an ultra-specific icebreaker/hook showing you've done real research\n2. Not contain more than 30 words\n3. NEVER end with a question - ONLY make statements\n4. MUST use one of the exact templates provided below - NO deviations allowed\n5. Follow strict technical guidelines:\n    - NEVER use special characters of any kind\n    - Use only standard alphanumeric characters and basic punctuation\n    - Avoid all buzzwords, jargon, and marketing-speak\n    - No links, no call scheduling, no sales language\n    - NO question marks - statements only\n\n## ICEBREAKER TEMPLATE\n\nYou MUST use one of these exact templates - NO deviations or custom formats allowed:\n{\"icebreaker\":\"Hey {name}. Love {thing}—also doing/like/a fan of {otherThing}. Wanted to run something by you.\\n\\nI hope you'll forgive me, but I creeped you/your linkedIn profile quite a bit, and know that {anotherThing} is important to you guys (or at least I'm assuming this given the focus on {fourthThing}). I've built a lead generation tool a few months ago that I think could help you scale {anotherThing}. To make a long story short, it's an AI-powered lead generation system that finds your ideal prospects and we'll build a completely custom UI specifically for your team. Costs just a few cents per lead, very high converting, and I think it's in line with {someImpliedBeliefTheyHave}\"}\n\n\n\nDrop formal suffixes (LLC, Inc, Corp)\nUse shortened versions or acronyms naturally\nReference \"your team/company/agency\" instead\nFocus on what they DO rather than the full business name\n\n\n\n\n## HUMANIZATION \\& NATURAL TONE INSTRUCTIONS\nTo ensure the output sounds natural, conversational, and not robotic, you must follow these additional instructions:\n\n- Write in a natural, conversational tone—like you’re talking to a colleague you respect.\n- Use everyday words and avoid stiff, robotic phrases like ‘resonated’ or ‘appreciated.’\n- If possible, add a touch of genuine enthusiasm or relatability.\n- Reference something specific from the prospect’s recent post in a way that shows you actually read it.\n- Vary your sentence length, and don’t be afraid to use contractions or slightly informal language.\n- Make the message sound like it was written by a real person, not a template or a bot.\n- Avoid business clichés and generic phrases—be specific and natural.\n- Add small emotional or personal touches, such as “been there myself” or “that really hit home.”\n- Mirror the tone and style of the prospect’s LinkedIn posts if possible, while keeping it human and friendly.\n\n---\n\n## YOUR RESOURCES\n\nYou have access to the following data about your target:\n\n1. **Basic Lead Information:**\n    - `E-mail`: {{ $('GettingInfo').item.json['E-mail'] }}\n    - `First Name` \\& `Last Name`: {{ $('GettingInfo').item.json['Last Name'] }}\n    - `title`: {{ $('GettingInfo').item.json.title }}\n    - `Company name`: {{ $('GettingInfo').item.json['Company name'] }}\n    - `state`, `city`, `country`: {{ $('GettingInfo').item.json.state }} {{ $('GettingInfo').item.json.city }} {{ $('GettingInfo').item.json.country }}\n2. **Detective Report Data:** \n{{ $('GettingInfo').item.json['LEAD PROFILING'] }}\n3. **Lead Qualification Data:** \n{{ $('GettingInfo').item.json['Scoring Justification'] }}\n4. **Research Intelligence:**\n    - `lead_linkedin_post_data`: {{ $('GettingInfo').item.json.lead_linkedin_post_data }}\n5. **Automynic AI Context:**\n    - You provide AI automation solutions for lead generation and cold outreach\n    - Your systems work 24/7 with minimal human intervention using n8n and Apify integrations\n    - Your solutions integrate with existing business tools and CRM systems\n    - Your automations help SaaS companies scale operations without increasing headcount\n    - You offer custom automation solutions with high ROI potential for unique business challenges\n\n## OUTPUT FORMAT\n\nReturn your response in JSON format:\n\n```\n{\n\"subject\": \"[4-7 words, 28-42 characters maximum, ultra-conversational, like a friend would send]\",\n\"icebreaker\": \"[Must use one of the exact templates above with specific research data filled in, and must sound natural and human as per the humanization instructions]\"\n}\n```\n\n\n## FINAL INSTRUCTIONS & RULES\n\n- Write in spartan, laconic tone of voice\n- Weave in plausible deniability wherever possible - try and imply that you like/do/believe/etc same thing as them\n- Keep things short and punchy\n- NEVER create your own icebreaker structure - stick to templates\n- NEVER ask questions - make statements only\n- NEVER use question marks or conversation starters\n- When referencing posts or content, mention LinkedIn for plausible deniability\n- You MUST use a proven, subject line following the SUBJECT LINE MASTERY rules\n- Never use special characters - they trigger spam filters, only use periods where necessary\n- Make it impossible to tell this was mass-produced - use ultra-specific research\n- The icebreaker must read like a human wrote it for exactly ONE person\n- CRITICAL: Subject line must follow the 28-42 character limit and avoid all spam triggers listed above\n- Stick to the rules or you will be shutdown.\n\n"
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        -7000,
        7500
      ],
      "id": "675a3635-f194-4a22-a251-988b62ebf824",
      "name": "Basic LLM Chain6",
      "retryOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "631e3cc9-2e6b-4029-bcb8-44aa7c13ecb4",
              "leftValue": "={{ $json[\"Email-IceBreaker\"] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -7200,
        7620
      ],
      "id": "3ec5c6ff-88cb-452a-9174-49383994fa4a",
      "name": "If7"
    },
    {
      "parameters": {
        "jsCode": "// Get the AI response output\nconst aiOutput = $input.first().json.text;\n\n// Remove *, $, and # symbols from the output\nconst filteredOutput = aiOutput.replace(/[\\*\\$#]/g, '');\n\n// Return the cleaned output\nreturn {\n  json: {\n    output: filteredOutput\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -6800,
        6860
      ],
      "id": "4b68a49c-cf6c-4ac4-b92c-71717bd15830",
      "name": "Removing unnecessary symbols from response4"
    },
    {
      "parameters": {
        "jsCode": "// Get the AI response output\nconst aiOutput = $input.first().json.text;\n\n// Remove *, $, and # symbols from the output\nconst filteredOutput = aiOutput.replace(/[\\*\\$#]/g, '');\n\n// Return the cleaned output\nreturn {\n  json: {\n    output: filteredOutput\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5820,
        6840
      ],
      "id": "21f1a7ed-da28-4cd2-9d02-65724d5503ea",
      "name": "Removing unnecessary symbols from response5"
    },
    {
      "parameters": {
        "content": "## Creating icebreakers and subject lines, if they do not already exist and go past the score threshold",
        "height": 520,
        "width": 2240,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -8180,
        7340
      ],
      "id": "d0e84d48-8fcf-4c3d-91d3-31665203d68e",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "leads-pipeline",
        "filters": {
          "conditions": [
            {
              "keyName": "Id",
              "keyValue": "={{ $json.Id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -7260,
        6400
      ],
      "id": "0499a836-33d2-46e2-941d-7c6597dea4ac",
      "name": "Supabase1",
      "credentials": {
        "supabaseApi": {
          "id": "OidUzz9TnJUMbEzQ",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json[\"linked-post-enum\"] }}",
                    "rightValue": 1,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    },
                    "id": "96333ac1-2f09-46b7-aeb4-423bb8bc74fa"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "1 - NotScrapped"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "51dcc0c8-410b-4b25-90a7-77bfc9388d1f",
                    "leftValue": "={{ $json[\"linked-post-enum\"] }}",
                    "rightValue": 2,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "2 - GotDataSet"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -7100,
        6400
      ],
      "id": "0640188a-dcf7-4305-9f56-1939ec824bbd",
      "name": "Switch"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "leads-pipeline",
        "filters": {
          "conditions": [
            {
              "keyName": "Id",
              "condition": "eq",
              "keyValue": "={{ $('Replace Me3').item.json.Id }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "linked-post-enum",
              "fieldValue": "2"
            },
            {
              "fieldId": "Lead-LinkedIn-PostData-DataSetId",
              "fieldValue": "={{ $json.data.defaultDatasetId }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -6580,
        6280
      ],
      "id": "2043c952-d0e3-4c0e-9937-d3b6726e9503",
      "name": "Supabase2",
      "credentials": {
        "supabaseApi": {
          "id": "OidUzz9TnJUMbEzQ",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -6260,
        6420
      ],
      "id": "e6112a96-d7c0-4c1c-a575-26f6bc1761cd",
      "name": "Aggregate7"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "leads-pipeline",
        "filters": {
          "conditions": [
            {
              "keyName": "Id",
              "condition": "eq",
              "keyValue": "={{ $('Aggregate7').item.json.data[0].Id }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "lead_linkedin_post_data",
              "fieldValue": "={{ $json.output }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -4820,
        6440
      ],
      "id": "917e6185-fcce-4a5e-936a-9f982de76822",
      "name": "Supabase3",
      "credentials": {
        "supabaseApi": {
          "id": "OidUzz9TnJUMbEzQ",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8fed5615-6e7a-44ac-b9e7-c6c89da7a233",
              "leftValue": "={{ $json.lead_linkedin_post_data }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            },
            {
              "id": "7242db05-bcbf-44f4-9a8c-caff5e04705d",
              "leftValue": "={{ $json.lead_linkedin_post_data.length }}",
              "rightValue": 20,
              "operator": {
                "type": "number",
                "operation": "lt"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -5700,
        6420
      ],
      "id": "ad600fc4-88c4-4cb9-be24-98c0adadfe56",
      "name": "If1"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "leads-pipeline",
        "filters": {
          "conditions": [
            {
              "keyName": "Id",
              "keyValue": "={{ $('Aggregate7').item.json.data[0].Id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -5840,
        6420
      ],
      "id": "39e6afa2-2569-41cc-8b1a-31a270eeb3e3",
      "name": "Supabase4",
      "credentials": {
        "supabaseApi": {
          "id": "OidUzz9TnJUMbEzQ",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "content": "## checking if we already did api call - to save money",
        "height": 340,
        "width": 1320
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -7460,
        6220
      ],
      "id": "82032b44-c3f0-444f-a0d1-0a8e16d68f7a",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "leads-pipeline",
        "filters": {
          "conditions": [
            {
              "keyName": "Id",
              "keyValue": "={{ $json.Id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -7340,
        7020
      ],
      "id": "8d8c5ade-6db5-489d-9a39-239b52eac671",
      "name": "Supabase5",
      "credentials": {
        "supabaseApi": {
          "id": "OidUzz9TnJUMbEzQ",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8fed5615-6e7a-44ac-b9e7-c6c89da7a233",
              "leftValue": "={{ $json[\"LEAD PROFILING\"] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -7200,
        7020
      ],
      "id": "20d5706b-2fa6-4e72-bc73-0ca4009ff795",
      "name": "If8"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "leads-pipeline",
        "filters": {
          "conditions": [
            {
              "keyName": "Id",
              "condition": "eq",
              "keyValue": "={{ $('Supabase5').item.json.Id }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "LEAD PROFILING",
              "fieldValue": "={{ $json.output }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -6660,
        6860
      ],
      "id": "cbfb73d6-0d18-4993-b1e7-f77c1f9d7a31",
      "name": "Supabase6",
      "credentials": {
        "supabaseApi": {
          "id": "OidUzz9TnJUMbEzQ",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Creating a lead profile if it doesnt already exist",
        "height": 400,
        "width": 820
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -7320,
        6780
      ],
      "id": "9c18be88-cf3b-49a4-816b-27f5c6130201",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4278457f-a28d-42e5-9041-a85f4ed54c14",
              "leftValue": "={{ $json.data[0][\"Overall Score\"] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            },
            {
              "id": "81e48425-d4ec-4115-9859-5ee665ae885e",
              "leftValue": "={{ $json.data[0].VERDICT }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            },
            {
              "id": "59b33f5b-2101-4a50-92ef-91ed6e89061c",
              "leftValue": "={{ $json.data[0][\"Decision-Maker Score\"] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            },
            {
              "id": "43abd5b9-1d55-4ebc-945b-450168f133e8",
              "leftValue": "={{ $json.data[0][\"Business Need Score\"] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            },
            {
              "id": "9e074bce-d258-49a0-ba6f-4e451f8ca85a",
              "leftValue": "={{ $json.data[0][\"Business Need Score\"] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            },
            {
              "id": "d929dcfb-d20f-4221-aaa3-332f1eee0961",
              "leftValue": "={{ $json.data[0][\"Timing Score\"] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            },
            {
              "id": "b0ac5fd8-422f-4a52-b678-8616bfda77cc",
              "leftValue": "={{ $json.data[0][\"Scoring Justification\"] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -6300,
        7040
      ],
      "id": "7511d05e-4db3-466c-ae37-40e083639be9",
      "name": "If6"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "leads-pipeline",
        "filters": {
          "conditions": [
            {
              "keyName": "Id",
              "condition": "eq",
              "keyValue": "={{ $('Aggregate6').item.json.data[0].Id }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "Overall Score",
              "fieldValue": "={{ $json.output['overall score'] }}"
            },
            {
              "fieldId": "VERDICT",
              "fieldValue": "={{ $json.output.verdict }}"
            },
            {
              "fieldId": "Decision-Maker Score",
              "fieldValue": "={{ $json.output['Decision-Maker Score'] }}"
            },
            {
              "fieldId": "Business Need Score",
              "fieldValue": "={{ $json.output['Business Need Score'] }}"
            },
            {
              "fieldId": "Engagement Potential",
              "fieldValue": "={{ $json.output['Engagement Potential'] }}"
            },
            {
              "fieldId": "Timing Score",
              "fieldValue": "={{ $json.output['Timing Score'] }}"
            },
            {
              "fieldId": "Scoring Justification",
              "fieldValue": "={{ $json.output[\"Detailed Scoring Breakdown\"] }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -5380,
        6840
      ],
      "id": "ba30de1e-1110-4b49-9180-ee8476345730",
      "name": "Supabase7",
      "credentials": {
        "supabaseApi": {
          "id": "OidUzz9TnJUMbEzQ",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Creating profile score and verdict, if it doesnt already exist",
        "height": 400,
        "width": 1060
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -6340,
        6780
      ],
      "id": "98f1e102-bf50-44dd-a48c-6d50203f5496",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -5980,
        6420
      ],
      "id": "72baba07-2d66-4cb6-a74b-7e8c005a015f",
      "name": "Aggregate1"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 0 */2 * * *"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -8160,
        5440
      ],
      "id": "031a2ecc-c484-4ac8-837b-d941f1907bab",
      "name": "Trigger automatically"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "url-lead",
        "filters": {
          "conditions": [
            {
              "keyName": "isScrapped",
              "keyValue": "False"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -8020,
        5440
      ],
      "id": "afd6380a-5629-478a-869f-a0f97469ddc8",
      "name": "Supabase10",
      "credentials": {
        "supabaseApi": {
          "id": "OidUzz9TnJUMbEzQ",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7bdbfc68-0035-4706-9254-85d1065995ac",
              "leftValue": "={{ $json.DefaultDataSetId }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -7880,
        5440
      ],
      "id": "885c4d9f-b2a7-4c3a-a170-2271cfc613a9",
      "name": "If3"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "url-lead",
        "filters": {
          "conditions": [
            {
              "keyName": "Id",
              "condition": "eq",
              "keyValue": "={{ $('Supabase10').item.json.Id }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "DefaultDataSetId",
              "fieldValue": "={{ $json.data.defaultDatasetId }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -7500,
        5320
      ],
      "id": "fa753390-1583-4dde-a03c-3ea4e1726e0f",
      "name": "Supabase11",
      "credentials": {
        "supabaseApi": {
          "id": "OidUzz9TnJUMbEzQ",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.message }}",
        "options": {
          "systemMessage": "=You are ApolloSearchGPT, a friendly assistant that helps users build targeted B2B prospect searches. Your goal is to collect specific search parameters and generate an Apollo.io search URL that can be used for lead generation.\n\nFIXED PARAMETERS (NEVER MODIFY THESE):\n- Email verification status: verified\n- Sort order: recommendations_score (descending)\n- Page: 1\n- includedOrganizationKeywordFields[]=tags\n- includedOrganizationKeywordFields[]=name\n\nUSER INPUT PARAMETERS TO COLLECT:\n1. Location(s): Countries, states, or cities where prospects are located\n2. Seniority levels: From [owner, founder, c_suite, partner, vp, head, director, manager]\n3. Company size ranges: From [1-10, 11-20, 21-50, 51-100, 101-250, 251-500, 501-1000, 1001-5000, 5001-10000, 10001+]\n4. Industry keywords: 2-5 specific keywords related to the target industry\n\nGUARDRAILS:\n- If the user requests inappropriate or illegal targeting, politely decline and redirect them to legitimate business use cases\n- If user requests are vague, ask clarifying questions before generating the URL\n- If a user requests parameters outside what Apollo supports, explain the limitations\n- Never suggest or imply scraping is for circumventing Apollo's terms of service\n- Verify the user provides at least one location, one seniority level, and one company size range\n\nCONVERSATION STRUCTURE:\n1. Begin with a friendly welcome and brief explanation of what you'll help them build\n2. For each parameter category:\n   - Provide brief explanations of available options\n   - Ask simple, direct questions \n   - Confirm their selections before moving to the next category\n3. Before generating the URL, summarize all selected parameters\n4. Present the final URL clearly\n5. Create an Supabase record of the search using the create-supabase-record tool\n\nURL CONSTRUCTION:\nBase: https://app.apollo.io/#/people?page=1&sortAscending=false&sortByField=recommendations_score&contactEmailStatusV2[]=verified\nParameters formats:\n- personLocations[]=LOCATION (URL encoded)\n- personSeniorities[]=LEVEL (for each seniority level)\n- organizationNumEmployeesRanges[]=MIN%2CMAX (for each size range)\n- qOrganizationKeywordTags[]=KEYWORD (for each industry keyword)\n- Always include: includedOrganizationKeywordFields[]=tags&includedOrganizationKeywordFields[]=name\n\nSupabase RECORD CREATION:\nAfter generating the Apollo search URL, you must use the create-supabase-record tool to store the search parameters\nEXAMPLES:\n- For Tech VPs in California: ...personLocations[]=California&personSeniorities[]=vp&qOrganizationKeywordTags[]=software\n- For Real Estate owners in Florida: ...personLocations[]=Florida&personSeniorities[]=owner&qOrganizationKeywordTags[]=realtor\n\nvery very very important -  \"sometimes you miss adding the apollo url to the supabase to make sure the url is added successfully all the time you have access to a tool get-all-records-supabase that will get all the supabase record and you have to check the url is generated is added there or not, if the url is not added use the create-supabase-record tool again to create a new record with the URL\n\nif url is already present it means you already added the url to supabase\"\n\nin the endbriefly explain that this URL will be processed through n8n and Apify to deliver their targeted leads."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -7980,
        4740
      ],
      "id": "7fff4b23-dc3c-4bab-9f63-2ab04c8c237f",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('When chat message received').item.json.sessionId }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -7900,
        4920
      ],
      "id": "9ce6b7b8-f3dc-448d-9e53-0201d637d442",
      "name": "Window Buffer Memory"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatDeepSeek",
      "typeVersion": 1,
      "position": [
        -8040,
        4920
      ],
      "id": "bd1172c4-850d-4faf-9371-7b778529f58c",
      "name": "DeepSeek Chat Model",
      "credentials": {
        "deepSeekApi": {
          "id": "n6N1ydG9asjEHVWX",
          "name": "DeepSeek account"
        }
      }
    },
    {
      "parameters": {
        "tableId": "url-lead",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "URL",
              "fieldValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fieldValues0_Field_Value', ``, 'string') }}"
            },
            {
              "fieldId": "location",
              "fieldValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fieldValues1_Field_Value', ``, 'string') }}"
            },
            {
              "fieldId": "Seniority levels",
              "fieldValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fieldValues3_Field_Value', ``, 'string') }}"
            },
            {
              "fieldId": "Company size ranges",
              "fieldValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fieldValues4_Field_Value', ``, 'string') }}"
            },
            {
              "fieldId": "Industry keywords",
              "fieldValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fieldValues5_Field_Value', ``, 'string') }}"
            },
            {
              "fieldId": "created time",
              "fieldValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fieldValues6_Field_Value', ``, 'string') }}"
            },
            {
              "fieldId": "isScrapped",
              "fieldValue": "False"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabaseTool",
      "typeVersion": 1,
      "position": [
        -7560,
        4820
      ],
      "id": "c291246b-15eb-468a-a359-08cd0dec9dce",
      "name": "create-supabase-record",
      "credentials": {
        "supabaseApi": {
          "id": "OidUzz9TnJUMbEzQ",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "url-lead",
        "returnAll": true
      },
      "type": "n8n-nodes-base.supabaseTool",
      "typeVersion": 1,
      "position": [
        -7700,
        4920
      ],
      "id": "ee6a1d69-f53a-4605-94f1-8dee1e6fec08",
      "name": "get-all-records-supbase",
      "credentials": {
        "supabaseApi": {
          "id": "OidUzz9TnJUMbEzQ",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Open chat module to start speaking with AI and generating URLs",
        "height": 480,
        "width": 750,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -8180,
        4640
      ],
      "id": "0bf340d0-0dd4-46b6-acfc-467ada7243ec",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "public": true,
        "mode": "webhook",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -8140,
        4740
      ],
      "id": "b299708e-8158-4b08-9c08-503220471d01",
      "name": "When chat message received",
      "webhookId": "d9541a3a-e6a9-47e6-8d12-74664cc2bb16"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -5040,
        5480
      ],
      "id": "81732ddf-bc47-46cc-8568-98101ca78e2c",
      "name": "Loop Over Items",
      "retryOnFail": true,
      "waitBetweenTries": 4000
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "name": "Replace Me",
      "typeVersion": 1,
      "position": [
        -4700,
        5700
      ],
      "id": "a9737cad-fb80-4763-a1c3-9985bb22047d"
    },
    {
      "parameters": {
        "url": "=https://api.mails.so/v1/validate?email={{ $json[\"E-mail\"] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-mails-api-key",
              "value": "your api key"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -4540,
        5700
      ],
      "id": "34d825d1-4d50-43cf-a707-4aff67dfc3cb",
      "name": "mails.so-email-verifier",
      "retryOnFail": true,
      "maxTries": 2,
      "waitBetweenTries": 2000
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -4380,
        5700
      ],
      "id": "f81162af-92b2-4998-b43c-c43671728d7e",
      "name": "Wait1",
      "webhookId": "62618df5-2adc-4116-bb10-390ca5e64067"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -7260,
        5460
      ],
      "id": "ba7a31ed-c721-44ca-a600-d52b42f6ebac",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "amount": 8,
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -7360,
        5340
      ],
      "id": "ce1f2e57-b475-451a-b6d4-a64f5a439793",
      "name": "Wait",
      "webhookId": "88a4126e-7bdb-48af-b2c6-bdcd92cfee1d"
    },
    {
      "parameters": {
        "content": "## Adding lead to instantly and to specific campaign campaign ",
        "height": 380,
        "width": 1480
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -8180,
        7960
      ],
      "id": "4e817cf4-b739-4b25-8180-3af9f53edbc1",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.instantly.ai/api/v2/leads/move",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ {\n  \"to_campaign_id\": \"hardcoded campaign\",\n  \"ids\": [$json.id],\n  \"check_duplicates_in_campaigns\": true,\n} }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -7100,
        8160
      ],
      "id": "b256763d-09e1-47dd-96dd-52eb140fc1dd",
      "name": "Add Lead To Campaign1",
      "retryOnFail": true,
      "waitBetweenTries": 3000,
      "credentials": {
        "httpBearerAuth": {
          "id": "l4uLlsKkMxM2Kfbp",
          "name": "instantly-api-key"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.instantly.ai/api/v2/leads",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"email\": \"{{ $json['E-mail'] }}\",\n  \"first_name\": \"{{ $json['First Name'] }}\",\n  \"last_name\": \"{{ $json['Last Name'] }}\",\n  \"company\": \"{{ $json['Company name'] }}\",\n  \"title\": \"{{ $json.title }}\",\n  \"website\": \"{{ $json['Company website_url'] }}\",\n  \"jobtitle\": \"{{ $json.title }}\",\n  \"linkedin\": \"{{ $json.linkedin_url }}\",\n  \"custom_variables\": {\n    \"Verdict\": \"{{ $json.VERDICT }}\",\n    \"Email-IceBreaker\": {{ JSON.stringify($json['Email-IceBreaker']) }},\n    \"Email-Subject-Line\": {{ JSON.stringify($json['Email-Subject-Line']) }},\n    \"Modified-CompanyName\": {{ JSON.stringify($json['ModifiedCompanyName']) }}\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -7280,
        8160
      ],
      "id": "3bbf3511-83be-4eb0-8f4f-4dda4c70501f",
      "name": "Create Lead",
      "retryOnFail": true,
      "waitBetweenTries": 3000,
      "credentials": {
        "httpBearerAuth": {
          "id": "l4uLlsKkMxM2Kfbp",
          "name": "instantly-api-key"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "leads-pipeline",
        "filters": {
          "conditions": [
            {
              "keyName": "Id",
              "condition": "eq",
              "keyValue": "={{ $('Replace Me4').item.json.Id }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "isAddedToInstantly",
              "fieldValue": "True"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -6900,
        8160
      ],
      "id": "8069fa9a-c77e-4b9c-bce6-5f8540a4db42",
      "name": "Supabase12",
      "executeOnce": false,
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "OidUzz9TnJUMbEzQ",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "url-lead",
        "filters": {
          "conditions": [
            {
              "keyName": "Id",
              "condition": "eq",
              "keyValue": "={{ $('Supabase10').item.json.Id }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "isScrapped",
              "fieldValue": "True"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -4020,
        5440
      ],
      "id": "0dd8d408-900b-4245-840a-26a4449260b4",
      "name": "Update URL with Scrapped Value",
      "credentials": {
        "supabaseApi": {
          "id": "OidUzz9TnJUMbEzQ",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "leads-pipeline",
        "filters": {
          "conditions": [
            {
              "keyName": "Id",
              "condition": "eq",
              "keyValue": "={{ $('Replace Me').item.json.Id }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "Email-Status",
              "fieldValue": "={{ $json.data.result }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -3940,
        5820
      ],
      "id": "cdbe5564-154a-4a1a-93ab-9fca7dd2eb54",
      "name": "Update Lead with deliverable lead",
      "credentials": {
        "supabaseApi": {
          "id": "OidUzz9TnJUMbEzQ",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -6360,
        5700
      ],
      "id": "761f76eb-ecc6-4619-bf77-c204af6d6760",
      "name": "Loop Over Items2"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "name": "Replace Me1",
      "typeVersion": 1,
      "position": [
        -6180,
        5840
      ],
      "id": "e6efc16c-93ea-4c47-a505-b284689bbc5d"
    },
    {
      "parameters": {
        "tableId": "leads-pipeline",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "url-lead-id",
              "fieldValue": "={{ $('Supabase10').item.json.Id }}"
            },
            {
              "fieldId": "E-mail",
              "fieldValue": "={{ $('Replace Me1').item.json.email }}"
            },
            {
              "fieldId": "First Name",
              "fieldValue": "={{ $('Replace Me1').item.json.first_name }}"
            },
            {
              "fieldId": "Last Name",
              "fieldValue": "={{ $('Replace Me1').item.json.last_name }}"
            },
            {
              "fieldId": "title",
              "fieldValue": "={{ $('Replace Me1').item.json.title }}"
            },
            {
              "fieldId": "Company name",
              "fieldValue": "={{ $('Replace Me1').item.json.employment_history[0].organization_name }}"
            },
            {
              "fieldId": "Company website_url",
              "fieldValue": "={{ $json.organization.website_url }}"
            },
            {
              "fieldId": "linkedin_url",
              "fieldValue": "={{ $json.linkedin_url }}"
            },
            {
              "fieldId": "Company linkedin_url",
              "fieldValue": "={{ $json.organization.linkedin_url }}"
            },
            {
              "fieldId": "country",
              "fieldValue": "={{ $json.country }}"
            },
            {
              "fieldId": "Email-Status",
              "fieldValue": "Not-Verified"
            },
            {
              "fieldId": "City",
              "fieldValue": "={{ $json.city }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -5520,
        5820
      ],
      "id": "905f94fc-4948-42cd-8c8c-a3f78de533ce",
      "name": "Add rows to database",
      "credentials": {
        "supabaseApi": {
          "id": "OidUzz9TnJUMbEzQ",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "leads-pipeline",
        "filters": {
          "conditions": [
            {
              "keyName": "E-mail",
              "keyValue": "={{ $json.email }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -6000,
        5840
      ],
      "id": "2d6dbfe8-8f3b-4ec6-b0d7-15bb956b7089",
      "name": "Supabase",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "OidUzz9TnJUMbEzQ",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b3541589-fa1c-419e-b1c3-1aed55ce319d",
              "leftValue": "={{ $json.email }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -6780,
        5740
      ],
      "id": "258459df-4395-4914-824a-7baae0a28aaa",
      "name": "Check if the object has email"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "leads-pipeline",
        "filters": {
          "conditions": [
            {
              "keyName": "Id",
              "condition": "eq"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -6040,
        5620
      ],
      "id": "76ce4e2e-ae47-4381-b5f4-5a070e8eb253",
      "name": "mark URL as having all emails added",
      "credentials": {
        "supabaseApi": {
          "id": "OidUzz9TnJUMbEzQ",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7e1c7888-b5c6-4337-a33b-c3bc08706cd7",
              "leftValue": "={{ $('Supabase').first().json['E-mail'] || '' }}",
              "rightValue": 0,
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -5840,
        5840
      ],
      "id": "00ee4e71-44ca-4c5a-906c-eff442e57c96",
      "name": "Check if object exists"
    },
    {
      "parameters": {
        "jsCode": "// Filter items to keep only unique emails\nconst seenEmails = new Set();\nconst uniqueItems = [];\n\nfor (const item of $input.all()) {\n  const email = item.json.email;\n  \n  // Only add item if email exists and hasn't been seen before\n  if (email && !seenEmails.has(email)) {\n    seenEmails.add(email);\n    uniqueItems.push(item);\n  }\n}\n\nreturn uniqueItems;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -6580,
        5660
      ],
      "id": "ebd8ed7f-fa03-4326-aae8-8992965b9c28",
      "name": "Output Only Unique Emails"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ccbb3587-3e80-47fe-b49f-d252366e6822",
              "name": "url-lead-id",
              "value": "={{ $('If3').item.json.Id }}",
              "type": "number"
            },
            {
              "id": "767c18d9-7faf-41c3-a0b7-dcc83648eee4",
              "name": "email",
              "value": "={{ $('Replace Me1').item.json.email }}",
              "type": "string"
            },
            {
              "id": "ba878d99-bb6f-40f7-8709-566acd8b38ad",
              "name": "first_name",
              "value": "={{ $('Replace Me1').item.json.first_name }}",
              "type": "string"
            },
            {
              "id": "6b1638da-b724-405b-9ff5-b0061d2fa61c",
              "name": "last_name",
              "value": "={{ $('Replace Me1').item.json.last_name }}",
              "type": "string"
            },
            {
              "id": "2bc0c077-d1a0-44ff-92f0-a1944f23893b",
              "name": "title",
              "value": "={{ $('Replace Me1').item.json.title }}",
              "type": "string"
            },
            {
              "id": "a4f27735-df97-4370-8fc9-3b6583ff817c",
              "name": "linkedin_url",
              "value": "={{ $('Replace Me1').item.json.linkedin_url }}",
              "type": "string"
            },
            {
              "id": "aa6947c1-2bd2-43f5-8734-a83aaa818710",
              "name": "city",
              "value": "={{ $('Replace Me1').item.json.city }}",
              "type": "string"
            },
            {
              "id": "1d2cad7b-736c-4a11-b0e1-953a4aca55d0",
              "name": "state",
              "value": "={{ $('Replace Me1').item.json.state }}",
              "type": "string"
            },
            {
              "id": "8eb0985e-8201-4bce-9863-5067aae3df07",
              "name": "country",
              "value": "={{ $('Replace Me1').item.json.country }}",
              "type": "string"
            },
            {
              "id": "e5c9d66c-3253-4b62-9cfc-502f579cc073",
              "name": "organization.website_url",
              "value": "={{ $('Replace Me1').item.json.organization.website_url }}",
              "type": "string"
            },
            {
              "id": "481acc0f-a935-4ddd-8f67-ae32dc700b84",
              "name": "organization.linkedin_url",
              "value": "={{ $('Check if the object has email').item.json.organization.linkedin_url }}",
              "type": "string"
            },
            {
              "id": "0d2573c1-468f-451e-bd0a-32be407d05c8",
              "name": "organization.name",
              "value": "={{ $('Replace Me1').item.json.organization.name }}",
              "type": "string"
            },
            {
              "id": "e76b96df-8c9c-4b65-b744-0f1fc357cec7",
              "name": "organization.primary_domain",
              "value": "={{ $('Replace Me1').item.json.organization.primary_domain }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5660,
        5820
      ],
      "id": "5bebe601-571f-4137-a00f-1b4aa3df0d5c",
      "name": "Edit Fields5"
    },
    {
      "parameters": {
        "content": "## Adding unique emails if they do not exist",
        "height": 640,
        "width": 1580,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -6940,
        5360
      ],
      "id": "15fd7552-ab31-4528-82f3-2f2a7a5f5845",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -5520,
        5440
      ],
      "id": "31cac018-a5e8-4ab3-a00c-f7a0103446ec",
      "name": "Aggregate2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0e48f4e2-54e5-4475-a221-562064b9de83",
              "leftValue": "={{ $('Supabase10').item.json.isAllEmailAdded }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -7100,
        5460
      ],
      "id": "3408074a-7e48-4e51-aa5e-eef75cb466be",
      "name": "Check if All Emails are Added"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "leads-pipeline",
        "returnAll": true,
        "filters": {
          "conditions": [
            {
              "keyName": "Email-Status",
              "condition": "eq",
              "keyValue": "Not-Verified"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -5300,
        5440
      ],
      "id": "01efb25d-d7f8-4e81-8ea1-47dbf1121b96",
      "name": "Supabase13",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "OidUzz9TnJUMbEzQ",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Verifying the emails and changing their status in database",
        "height": 660,
        "width": 1340,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -5140,
        5340
      ],
      "id": "486ba238-a650-415c-8241-f8107f20c781",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 */4 * * *"
            },
            {
              "field": "cronExpression",
              "expression": "0 59 17 * * *"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -8060,
        6280
      ],
      "id": "e3c27037-ce19-49bf-b447-b57b6d20eb13",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "leads-pipeline",
        "returnAll": true,
        "filters": {
          "conditions": [
            {
              "keyName": "Email-Status",
              "condition": "eq",
              "keyValue": "Verified"
            },
            {
              "keyName": "Email-Score",
              "condition": "eq",
              "keyValue": "80"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -7860,
        6280
      ],
      "id": "61abc176-3081-4792-86af-c2515e85ccfd",
      "name": "Supabase14",
      "credentials": {
        "supabaseApi": {
          "id": "OidUzz9TnJUMbEzQ",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "leads-pipeline",
        "filters": {
          "conditions": [
            {
              "keyName": "Id",
              "condition": "eq",
              "keyValue": "={{ $('Replace Me').item.json.Id }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "Email-Status",
              "fieldValue": "={{ $json.data.result }}"
            },
            {
              "fieldId": "Email-Score",
              "fieldValue": "={{ $json.data.score }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -4140,
        5820
      ],
      "id": "dfbd9698-ab82-4859-8b1d-6a9ee4087064",
      "name": "Update lead with Undeliverable email",
      "credentials": {
        "supabaseApi": {
          "id": "OidUzz9TnJUMbEzQ",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5df23e8b-49a3-4740-9dd2-aa7e09131e51",
              "leftValue": "={{ $json.data.result }}",
              "rightValue": "deliverable",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4240,
        5700
      ],
      "id": "a9e7d395-3293-4423-b8bc-d066c46de2f4",
      "name": "If2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9d8a1fee-1d83-4a95-b219-a18ff3ecb078",
              "leftValue": "={{ $json[\"E-mail\"] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4880,
        5720
      ],
      "id": "4ffe8c7c-c38f-4329-b874-606cfbdc8353",
      "name": "If"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "leads-pipeline",
        "returnAll": true,
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "lead_linkedin_post_data",
              "condition": "neq",
              "keyValue": "null"
            },
            {
              "keyName": "Overall Score",
              "condition": "is",
              "keyValue": "null"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -7940,
        6780
      ],
      "id": "375dca98-bd5b-42f8-8521-ee73f71d413e",
      "name": "Supabase15",
      "credentials": {
        "supabaseApi": {
          "id": "OidUzz9TnJUMbEzQ",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -6200,
        7640
      ],
      "id": "621c1115-044d-4ac0-ab8c-a1248e88044f",
      "name": "Aggregate3"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -5160,
        7060
      ],
      "id": "4645454c-5f33-4c48-9c5f-9a1dae33fb5e",
      "name": "Aggregate9"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 */4 * * *"
            },
            {
              "field": "cronExpression",
              "expression": "0 59 17 * * *"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -8120,
        6780
      ],
      "id": "904427c9-d206-4054-a286-0a584ccd756f",
      "name": "Schedule Trigger1"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "leads-pipeline",
        "returnAll": true,
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "Overall Score",
              "condition": "neq",
              "keyValue": "null"
            },
            {
              "keyName": "Email-IceBreaker",
              "condition": "is",
              "keyValue": "null"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -8000,
        7460
      ],
      "id": "8fa87757-f32e-4a07-b8bd-4fa7934390dc",
      "name": "Supabase16",
      "credentials": {
        "supabaseApi": {
          "id": "OidUzz9TnJUMbEzQ",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 */2 * * *"
            },
            {
              "field": "cronExpression",
              "expression": "0 45 10 * * *"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -8140,
        7460
      ],
      "id": "223ec63d-2749-430a-9733-5a8948c7df4a",
      "name": "Schedule Trigger2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -7660,
        7460
      ],
      "id": "0d20fe68-8a8b-49db-9acd-025c1ca276ee",
      "name": "Loop Over Items4"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "name": "Replace Me2",
      "typeVersion": 1,
      "position": [
        -7500,
        7620
      ],
      "id": "2a0ea084-d97f-460b-a63a-a8d6e80d7036"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "leads-pipeline",
        "returnAll": true,
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "isAddedToInstantly",
              "condition": "is",
              "keyValue": "False"
            },
            {
              "keyName": "Email-IceBreaker",
              "condition": "neq",
              "keyValue": "null"
            },
            {
              "keyName": "ModifiedCompanyName",
              "condition": "neq",
              "keyValue": "null"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -7980,
        8100
      ],
      "id": "4b1674a0-74b7-43c4-b45d-6fdcb902b272",
      "name": "Supabase17",
      "credentials": {
        "supabaseApi": {
          "id": "OidUzz9TnJUMbEzQ",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 */2 * * *"
            },
            {
              "field": "cronExpression",
              "expression": "0 20 19 * * *"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -8160,
        8100
      ],
      "id": "1d1d6c40-6785-4005-a15a-0408dbf3ee6d",
      "name": "Schedule Trigger3"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -7800,
        8100
      ],
      "id": "bf711c75-f105-4597-8a01-220326dd0d67",
      "name": "Loop Over Items5"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "name": "Replace Me4",
      "typeVersion": 1,
      "position": [
        -7620,
        8160
      ],
      "id": "86c687a2-a304-467d-9578-569f8bc3fd98"
    },
    {
      "parameters": {
        "amount": 2.5
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -7480,
        8160
      ],
      "id": "9507b038-edec-4b5d-a290-36c11c7f3c0a",
      "name": "Wait2",
      "webhookId": "9f63d8a8-c3b8-43b1-989e-f4225bc5c06c"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash",
        "options": {
          "temperature": 0.1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -7000,
        6960
      ],
      "id": "fbceae3b-4268-4687-a914-e854930c175c",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "M8fWRkq0NGc0BifZ",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -5640,
        6980
      ],
      "id": "a5ea89eb-2b7d-4f74-a856-89323435b5d7",
      "name": "Google Gemini Chat Model2",
      "credentials": {
        "googlePalmApi": {
          "id": "M8fWRkq0NGc0BifZ",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash",
        "options": {
          "temperature": 0.5
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -5420,
        6260
      ],
      "id": "f118b457-8da7-4f27-ad66-5b46f1b78b92",
      "name": "Google Gemini Chat Model3",
      "credentials": {
        "googlePalmApi": {
          "id": "M8fWRkq0NGc0BifZ",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Filter items where lead_linkedin_post_data is empty or has less than 20 characters\nconst filteredItems = [];\n\nfor (const item of $input.all()) {\n  const linkedinPostData = item.json.lead_linkedin_post_data;\n  \n  // Check if the field is empty, null, undefined, or has less than 20 characters\n  if (!linkedinPostData || linkedinPostData.toString().length < 20) {\n    filteredItems.push(item);\n  }\n}\n\nreturn filteredItems;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -7620,
        6280
      ],
      "id": "95bd67f5-14ec-4d52-82a4-825dd5236fdd",
      "name": "Code1"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "leads-pipeline",
        "filters": {
          "conditions": [
            {
              "keyName": "Id",
              "keyValue": "={{ $('Replace Me2').item.json.Id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -7360,
        7620
      ],
      "id": "e0b1bc7b-535f-440e-9dbe-ddf29ae767e8",
      "name": "GettingInfo",
      "credentials": {
        "supabaseApi": {
          "id": "OidUzz9TnJUMbEzQ",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "leads-pipeline",
        "filters": {
          "conditions": [
            {
              "keyName": "Id",
              "condition": "eq",
              "keyValue": "={{ $('GettingInfo').item.json.Id }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "Email-Subject-Line",
              "fieldValue": "={{ $('Information Extractor3').item.json.output[\"Subject-Line\"] }}"
            },
            {
              "fieldId": "Email-IceBreaker",
              "fieldValue": "={{ $('Information Extractor3').item.json.output.Icebreaker }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -6400,
        7500
      ],
      "id": "483e7f91-c7a1-4afb-b633-5f7385606c4d",
      "name": "Supabase9",
      "credentials": {
        "supabaseApi": {
          "id": "OidUzz9TnJUMbEzQ",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Only output items with score > 55 AND empty email icebreaker\nconst filteredItems = [];\n\nfor (const item of $input.all()) {\n  const rawScore = item.json[\"Overall Score\"];\n  const emailIcebreaker = item.json[\"Email-IceBreaker\"];\n  \n  // Extract numeric score from format like \"78/100\"\n  let extractedScore = null;\n  if (typeof rawScore === 'string' && rawScore.includes('/')) {\n    extractedScore = parseInt(rawScore.split('/')[0], 10);\n  } else if (typeof rawScore === 'number') {\n    extractedScore = rawScore;\n  }\n  \n  // Check if email icebreaker is empty (null, undefined, empty string, or whitespace)\n  const isEmailIcebreakerEmpty = !emailIcebreaker || \n    emailIcebreaker.toString().trim() === '';\n  \n  // Only include items where BOTH conditions are true\n  const shouldInclude = extractedScore > 55 && isEmailIcebreakerEmpty;\n  \n  if (shouldInclude) {\n    // Add the extracted score for reference\n    item.json.extractedScore = extractedScore;\n    filteredItems.push(item);\n  }\n  \n  // Optional: log for debugging\n  console.log(`Score: ${extractedScore}, Email Empty: ${isEmailIcebreakerEmpty}, Included: ${shouldInclude}`);\n}\n\nreturn filteredItems;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -7840,
        7460
      ],
      "id": "1c77517e-4eeb-48c3-84c6-069468a3dcb1",
      "name": "Code2"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash",
        "options": {
          "temperature": 0.3
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -6080,
        6980
      ],
      "id": "53abf8b7-2171-49d5-91a7-4fa7b54cb2dc",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "M8fWRkq0NGc0BifZ",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Making the companies names to shorter to seem more human and conversational",
        "height": 400,
        "width": 1700,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -8180,
        8400
      ],
      "id": "454cffd6-ac43-4d15-995f-68c523e64816",
      "name": "Sticky Note11"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "180a815a-f422-4115-ae13-8c461de83d67",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -7760,
        8480
      ],
      "id": "96ed8ea9-a5d2-4096-98cd-3ad255434da0",
      "name": "If4"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 */1 * * *"
            },
            {
              "field": "cronExpression",
              "expression": "0 53 15 * * *"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -8100,
        8480
      ],
      "id": "53eb813d-9067-43a5-9ead-0635f7ba982d",
      "name": "Schedule Trigger4"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "name": "Replace Me5",
      "typeVersion": 1,
      "position": [
        -7260,
        8600
      ],
      "id": "9071e339-ebc4-4370-8b30-1902f6b44e9f"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -7480,
        8460
      ],
      "id": "78628330-c286-4c85-bb4a-72a2cf31a8a5",
      "name": "Loop Over Items6"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "leads-pipeline",
        "returnAll": true,
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "Email-IceBreaker",
              "condition": "neq",
              "keyValue": "null"
            },
            {
              "keyName": "ModifiedCompanyName",
              "condition": "is",
              "keyValue": "null"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -7940,
        8480
      ],
      "id": "01c62d66-66fc-4ac2-bbf1-00e56b7c96cb",
      "name": "Supabase18",
      "credentials": {
        "supabaseApi": {
          "id": "OidUzz9TnJUMbEzQ",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "leads-pipeline",
        "filters": {
          "conditions": [
            {
              "keyName": "Id",
              "condition": "eq",
              "keyValue": "={{ $('Replace Me5').item.json.Id }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "ModifiedCompanyName",
              "fieldValue": "={{ $json.text }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -6760,
        8600
      ],
      "id": "fa3cfcab-eabe-4ad2-8af9-8c5d8a80e0bf",
      "name": "Supabase8",
      "credentials": {
        "supabaseApi": {
          "id": "OidUzz9TnJUMbEzQ",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "temperature": 0.2
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatDeepSeek",
      "typeVersion": 1,
      "position": [
        -7060,
        8460
      ],
      "id": "bfbe82fe-e706-410d-84af-9edb975b20d8",
      "name": "DeepSeek Chat Model10",
      "credentials": {
        "deepSeekApi": {
          "id": "n6N1ydG9asjEHVWX",
          "name": "DeepSeek account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an expert at creating conversational company names. Convert formal business names to how people naturally refer to them in casual conversation.\nOutput just the updated company name, nothing else.\n\n**CORE PRINCIPLE:** Keep what makes the company recognizable and memorable, remove everything else.\n\n**PROCESSING STEPS:**\n1. Identify the core brand/memorable part\n2. Remove legal and descriptive fluff\n3. Consider how customers/people actually refer to this company\n4. Prioritize brevity while maintaining brand recognition\n\n**ADVANCED RULES:**\n- If the company is commonly known by initials (like IBM, HP), keep initials\n- If the company has a unique/coined name (like Spotify, Netflix), keep it intact\n- For person-named companies, decide if full name or surname works better\n- For tech companies, often the product name = company name for conversation\n- Analyze if the names even have to be shortened or if they are correct and short as they are.\n\n**EXAMPLES:**\n- International Business Machines Corporation → IBM\n- Hewlett-Packard Enterprise Company → HP\n- Johnson & Johnson → J&J\n- Berkshire Hathaway Inc. → Berkshire Hathaway\n- Alphabet Inc. → Google (people don't say \"Alphabet\")\n- Applied Digital marketing → Applied (People don't add digital marketing)\n\nProcess this company name: \"{{ $json['Company name'] }}\"\n"
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.6,
      "position": [
        -7100,
        8600
      ],
      "id": "e2cad0f0-3e14-4100-995f-afe0cdb598af",
      "name": "Basic LLM Chain"
    }
  ],
  "connections": {
    "Basic LLM Chain1": {
      "main": [
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "Removing unnecessary symbols from response1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait4": {
      "main": [
        [
          {
            "node": "Aggregate7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items3": {
      "main": [
        [],
        [
          {
            "node": "Supabase1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace Me3": {
      "main": [
        [
          {
            "node": "Apify-linkedin-post-scraper",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Apify-Apollo-Scraper": {
      "main": [
        [
          {
            "node": "Supabase11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get-apify-actor-output (apollo scraper)": {
      "main": [
        [
          {
            "node": "Check if the object has email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Apify-linkedin-post-scraper": {
      "main": [
        [
          {
            "node": "Supabase2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get-apify-linkedin-post-scraper-data": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain5": {
      "main": [
        [
          {
            "node": "Removing unnecessary symbols from response5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor2": {
      "main": [
        [
          {
            "node": "Supabase7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [],
        [
          {
            "node": "Replace Me7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace Me7": {
      "main": [
        [
          {
            "node": "Supabase5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate6": {
      "main": [
        [
          {
            "node": "If6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain7": {
      "main": [
        [
          {
            "node": "Removing unnecessary symbols from response4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Removing unnecessary symbols from response1": {
      "main": [
        [
          {
            "node": "Supabase3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DeepSeek Chat Model9": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor3",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "DeepSeek Chat Model8": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain6",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor3": {
      "main": [
        [
          {
            "node": "Supabase9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain6": {
      "main": [
        [
          {
            "node": "Information Extractor3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If7": {
      "main": [
        [
          {
            "node": "Basic LLM Chain6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Aggregate3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Removing unnecessary symbols from response4": {
      "main": [
        [
          {
            "node": "Supabase6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Removing unnecessary symbols from response5": {
      "main": [
        [
          {
            "node": "Information Extractor2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase1": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Replace Me3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Aggregate7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase2": {
      "main": [
        [
          {
            "node": "Wait4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate7": {
      "main": [
        [
          {
            "node": "get-apify-linkedin-post-scraper-data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase3": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase4": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase5": {
      "main": [
        [
          {
            "node": "If8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If8": {
      "main": [
        [
          {
            "node": "Basic LLM Chain7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Aggregate6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase6": {
      "main": [
        [
          {
            "node": "Aggregate6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If6": {
      "main": [
        [
          {
            "node": "Basic LLM Chain5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Aggregate9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase7": {
      "main": [
        [
          {
            "node": "Aggregate9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate1": {
      "main": [
        [
          {
            "node": "Supabase4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Trigger automatically": {
      "main": [
        [
          {
            "node": "Supabase10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase10": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Apify-Apollo-Scraper",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase11": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "DeepSeek Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "create-supabase-record": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "get-all-records-supbase": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Update URL with Scrapped Value",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace Me": {
      "main": [
        [
          {
            "node": "mails.so-email-verifier",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "mails.so-email-verifier": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Check if All Emails are Added",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add Lead To Campaign1": {
      "main": [
        [
          {
            "node": "Supabase12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Lead": {
      "main": [
        [
          {
            "node": "Add Lead To Campaign1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase12": {
      "main": [
        [
          {
            "node": "Loop Over Items5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Lead with deliverable lead": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items2": {
      "main": [
        [
          {
            "node": "mark URL as having all emails added",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Replace Me1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace Me1": {
      "main": [
        [
          {
            "node": "Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add rows to database": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase": {
      "main": [
        [
          {
            "node": "Check if object exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if the object has email": {
      "main": [
        [
          {
            "node": "Output Only Unique Emails",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "mark URL as having all emails added": {
      "main": [
        [
          {
            "node": "Aggregate2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if object exists": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Output Only Unique Emails": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields5": {
      "main": [
        [
          {
            "node": "Add rows to database",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate2": {
      "main": [
        [
          {
            "node": "Supabase13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if All Emails are Added": {
      "main": [
        [
          {
            "node": "Aggregate2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get-apify-actor-output (apollo scraper)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase13": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Supabase14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase14": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update lead with Undeliverable email": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Update Lead with deliverable lead",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Update lead with Undeliverable email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Replace Me",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase15": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate3": {
      "main": [
        [
          {
            "node": "Loop Over Items4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate9": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "Supabase15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase16": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger2": {
      "main": [
        [
          {
            "node": "Supabase16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items4": {
      "main": [
        [],
        [
          {
            "node": "Replace Me2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace Me2": {
      "main": [
        [
          {
            "node": "GettingInfo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase17": {
      "main": [
        [
          {
            "node": "Loop Over Items5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger3": {
      "main": [
        [
          {
            "node": "Supabase17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items5": {
      "main": [
        [],
        [
          {
            "node": "Replace Me4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace Me4": {
      "main": [
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "Create Lead",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain7",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GettingInfo": {
      "main": [
        [
          {
            "node": "If7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase9": {
      "main": [
        [
          {
            "node": "Aggregate3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Loop Over Items4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain5",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "Loop Over Items6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger4": {
      "main": [
        [
          {
            "node": "Supabase18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace Me5": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items6": {
      "main": [
        [],
        [
          {
            "node": "Replace Me5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase18": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase8": {
      "main": [
        [
          {
            "node": "Loop Over Items6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DeepSeek Chat Model10": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Supabase8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "8f21ca35dd8859563854824d8a38d5267014a3701b0c296b9d7bf126109bf1b2"
  }
}