{
  "nodes": [
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "url-tasks",
        "returnAll": true,
        "matchType": "allFilters"
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -100,
        20
      ],
      "id": "a96369a5-9825-40fb-903c-ac488025e62a",
      "name": "Supabase",
      "credentials": {
        "supabaseApi": {
          "id": "OidUzz9TnJUMbEzQ",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "responseKey": "data"
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        240,
        20
      ],
      "id": "2ba3ebfc-85b8-4f65-82ce-e528933eed15",
      "name": "Respond to Webhook1"
    },
    {
      "parameters": {
        "path": "get-created-tasks/6f78-4ed2-acc3-ad63c1724d39",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -260,
        20
      ],
      "id": "871910d1-241c-4b41-aa22-89dce89e97bc",
      "name": "Getting-Email-Count",
      "webhookId": "e0a17667-6f78-4ed2-acc3-ad63c1724d39"
    },
    {
      "parameters": {
        "content": "## Getting all created tasks",
        "height": 260,
        "width": 740,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -300,
        -80
      ],
      "id": "c0b32e74-3257-445c-97c6-9aa7ae33cea6",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        60,
        20
      ],
      "id": "c0429d26-d92b-4eb6-bfb9-d01b03ad65d2",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "leads-pipeline",
        "returnAll": true,
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "url-lead-id",
              "condition": "eq",
              "keyValue": "={{ $json.query.id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -20,
        -280
      ],
      "id": "984ec1ba-07f1-4e05-b832-1e2353943a50",
      "name": "Supabase1",
      "credentials": {
        "supabaseApi": {
          "id": "OidUzz9TnJUMbEzQ",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "responseKey": "data"
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        560,
        -280
      ],
      "id": "b1378485-5cef-4250-9b57-c39f150041bc",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "content": "## Getting Information/Analytics regarding specific task\n\n",
        "height": 260,
        "width": 1060,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -300,
        -380
      ],
      "id": "93ff5e2e-82a0-43fc-a9d7-533e2a4ef7a8",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a5aa7eb0-a4c4-40e2-b90d-2bcc9f28f0bc",
              "name": "First Name",
              "value": "={{ $json[\"First Name\"] }}",
              "type": "string"
            },
            {
              "id": "25ec5606-f2be-4153-be52-602b769fdb42",
              "name": "Last Name",
              "value": "={{ $json[\"Last Name\"] }}",
              "type": "string"
            },
            {
              "id": "8f73b951-bf2d-4ae8-b9b0-c6c88bebc28c",
              "name": "title",
              "value": "={{ $json.title }}",
              "type": "string"
            },
            {
              "id": "ef264795-e1e4-4937-9107-40d08a38eaec",
              "name": "Company name",
              "value": "={{ $json[\"Company name\"] }}",
              "type": "string"
            },
            {
              "id": "7042f613-0efe-481e-8102-93acd237203b",
              "name": "Overall Score",
              "value": "={{ $json[\"Overall Score\"] }}",
              "type": "string"
            },
            {
              "id": "61b262ac-381a-4557-a3da-4b893a55f45b",
              "name": "VERDICT",
              "value": "={{ $json.VERDICT }}",
              "type": "string"
            },
            {
              "id": "c6a92f0d-05d7-43c2-a542-19f56eb39c4a",
              "name": "Id",
              "value": "={{ $json.Id }}",
              "type": "number"
            },
            {
              "id": "ccba1105-ceb3-49d2-b084-e058a1772d5c",
              "name": "Email-Score",
              "value": "={{ $json[\"Email-Score\"] }}",
              "type": "string"
            },
            {
              "id": "91a7fdbf-8c89-41a8-8e0d-8a444ed501f4",
              "name": "Email-Status",
              "value": "={{ $json[\"Email-Status\"] }}",
              "type": "string"
            },
            {
              "id": "57dd8c0f-dac8-4071-927f-5c8e7d671f91",
              "name": "E-mail",
              "value": "={{ $json[\"E-mail\"] }}",
              "type": "string"
            },
            {
              "id": "2e01f1e9-176f-458a-be4a-09b6cc617087",
              "name": "isAddedToInstantly",
              "value": "={{ $json.isAddedToInstantly }}",
              "type": "boolean"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        180,
        -280
      ],
      "id": "ed6cc7d1-4d9e-478e-b7df-bc4ccc044db6",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "jsCode": "// Initialize counters for existing functionality\nlet totalLeads = 0;\nlet deliverableEmails = 0;\nlet totalHotLeads = 0;\n\n// Initialize lead temperature counters\nlet coldLeads = 0;\nlet hotLeads = 0;\nlet warmLeads = 0;\n\n// Initialize counts for score ranges\nconst ranges = [\n  [1, 10], [11, 20], [21, 30], [31, 40], [41, 50],\n  [51, 60], [61, 70], [71, 80], [81, 90], [91, 100]\n];\n\nconst scoreCounts = {};\nranges.forEach(([start, end]) => {\n  scoreCounts[`${start}-${end}`] = 0;\n});\n\n// Function to extract score from \"xx/100\" format\nfunction extractScore(scoreString) {\n  if (!scoreString) return NaN;\n  const match = scoreString.toString().match(/(\\d+)\\/100/);\n  return match ? Number(match[1]) : NaN;\n}\n\n// Collect all leads data\nconst allLeads = [];\n\n// Single loop to process everything\nfor (const item of $input.all()) {\n  const id = item.json['Id'];\n  const emailStatus = item.json['Email-Status'];\n  const emailScore = item.json['Email-Score'];\n  const verdict = item.json['VERDICT'];\n  const overallScore = extractScore(item.json['Overall Score']);\n\n  // Add lead to collection (store original data)\n  allLeads.push(item.json);\n\n  // Count total leads (items with an ID)\n  if (id !== null && id !== undefined && id !== '') {\n    totalLeads++;\n  }\n\n  // Count deliverable emails (Email-Status is 'Verified' OR Email-Score is '80')\n  if (emailStatus === 'Verified' || emailStatus === 'deliverable' || emailScore === '80') {\n    deliverableEmails++;\n  }\n\n  // Count hot leads (VERDICT contains 'HOT')\n  if (verdict && verdict.toString().toUpperCase().includes('HOT')) {\n    totalHotLeads++;\n  }\n\n  // Count leads by temperature (Cold, Hot, Warm)\n  // Modified logic: if verdict is not null/empty and doesn't contain WARM or HOT, count as cold\n  // If verdict is null/empty, skip it entirely\n  if (verdict !== null && verdict !== undefined && verdict.toString().trim() !== '') {\n    const verdictUpper = verdict.toString().toUpperCase();\n    if (verdictUpper.includes('WARM') || verdictUpper.includes('HOT')) {\n      if (verdictUpper.includes('WARM')) {\n        warmLeads++;\n      }\n      if (verdictUpper.includes('HOT')) {\n        hotLeads++;\n      }\n    } else {\n      coldLeads++;\n    }\n  }\n  // If verdict is null, undefined, or empty, we skip it (no counting)\n\n  // Count leads by Overall Score ranges\n  if (!isNaN(overallScore)) {\n    for (const [start, end] of ranges) {\n      if (overallScore >= start && overallScore <= end) {\n        scoreCounts[`${start}-${end}`]++;\n        break;\n      }\n    }\n  }\n}\n\n// Return single consolidated object with all data\nreturn [{\n  json: {\n    'total-leads': totalLeads,\n    'deliverable-email-count': deliverableEmails,\n    'total-hot-leads': totalHotLeads,\n    'cold-leads': coldLeads,\n    'hot-leads': hotLeads,\n    'warm-leads': warmLeads,\n    'score-ranges': scoreCounts,\n    'leads': allLeads\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        380,
        -280
      ],
      "id": "c4cf2ac2-0e17-4d49-a8a4-c149957db393",
      "name": "Code"
    },
    {
      "parameters": {
        "path": "load-task-info/6f78-4ed2-acc3-ad63c1724d39",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -240,
        -280
      ],
      "id": "a0c0676e-b738-43f4-bc84-73fc6e95ce07",
      "name": "Getting-Email-Count1",
      "webhookId": "e0a17667-6f78-4ed2-acc3-ad63c1724d39"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "leads-pipeline",
        "returnAll": true,
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "Id",
              "condition": "eq",
              "keyValue": "={{ $json.query.id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -80,
        -600
      ],
      "id": "3a143bea-0762-4bf5-912f-11cf9cd9f52c",
      "name": "Supabase2",
      "credentials": {
        "supabaseApi": {
          "id": "OidUzz9TnJUMbEzQ",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "responseKey": "data"
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        240,
        -600
      ],
      "id": "9299e987-ab2d-4145-a888-9e6cd2be5e85",
      "name": "Respond to Webhook2"
    },
    {
      "parameters": {
        "content": "## Getting Information/Analytics regarding specific lead\n\n",
        "height": 260,
        "width": 740,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -300,
        -700
      ],
      "id": "8f74c000-79d9-4fa5-9fc1-c92e41b16832",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "path": "load-lead-info/6f78-4ed2-acc3-ad63c1724d39",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -260,
        -600
      ],
      "id": "b7904844-2bff-4dc3-92e3-db0d08487118",
      "name": "Getting-Email-Count2",
      "webhookId": "e0a17667-6f78-4ed2-acc3-ad63c1724d39"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        80,
        -600
      ],
      "id": "702d6631-1ecf-420f-88ee-0eef815702a1",
      "name": "Aggregate1"
    }
  ],
  "connections": {
    "Supabase": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Getting-Email-Count": {
      "main": [
        [
          {
            "node": "Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase1": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook": {
      "main": [
        []
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Getting-Email-Count1": {
      "main": [
        [
          {
            "node": "Supabase1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase2": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Getting-Email-Count2": {
      "main": [
        [
          {
            "node": "Supabase2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate1": {
      "main": [
        [
          {
            "node": "Respond to Webhook2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "instanceId": "8f21ca35dd8859563854824d8a38d5267014a3701b0c296b9d7bf126109bf1b2"
  }
}